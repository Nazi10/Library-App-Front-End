{"ast":null,"code":"// import {Outlet} from \"react-router-dom\";\n// import {useState, useEffect, useContext} from \"react\";\n// import useAuth from './AuthProvider';\n//\n// const PersistLogin = () => {\n//     const [isLoading, setIsLoading] = useState(true);\n//     const {setAuth, persist} = useContext(useAuth);\n//\n//     useEffect(() => {\n//         let isMounted = true;\n//         // console.log(localStorage.getItem(\"token\"))\n//         const token = localStorage.getItem(\"token\");\n//         setAuth(JSON.parse(token))\n//         console.log(JSON.parse(token))\n//         const getToken = async () => {\n//             debugger\n//             setAuth(JSON.parse(token))\n//            // if (token) {\n//            //     await setAuth(() => {\n//            //          console.log(token.data.accessToken);\n//            //          return {\n//            //              roles: token.data.roles,\n//            //              accessToken: token.data.accessToken\n//            //          }\n//            //      });\n//\n//                 // try {\n//                 //     debugger\n//                 //     // await setAuth(token)\n//                 //     await setAuth(() => {\n//                 //         console.log(token.data.accessToken);\n//                 //         return {\n//                 //             roles: token.data.roles,\n//                 //             accessToken: token.data.accessToken\n//                 //         }\n//                 //     });\n//                 // } catch (err) {\n//                 //     console.error(err);\n//                 // } finally {\n//                 console.log(token)\n//                     isMounted && setIsLoading(false);\n//                 // }\n//             // }\n//             !setAuth?.accessToken && persist ? await getToken() : setIsLoading(false);\n//             return () => isMounted = false;\n//         }\n//     }, [])\n//\n//     return (\n//         <>\n//             {!persist\n//                 ? <Outlet/>\n//                 : isLoading\n//                     ? <p>Loading...</p>\n//                     : <Outlet/>\n//             }\n//         </>\n//     )\n// }\n// export default PersistLogin","map":{"version":3,"names":[],"sources":["C:/Users/User/WebstormProjects/library/src/components/authentication/PersistLogin.js"],"sourcesContent":["// import {Outlet} from \"react-router-dom\";\r\n// import {useState, useEffect, useContext} from \"react\";\r\n// import useAuth from './AuthProvider';\r\n//\r\n// const PersistLogin = () => {\r\n//     const [isLoading, setIsLoading] = useState(true);\r\n//     const {setAuth, persist} = useContext(useAuth);\r\n//\r\n//     useEffect(() => {\r\n//         let isMounted = true;\r\n//         // console.log(localStorage.getItem(\"token\"))\r\n//         const token = localStorage.getItem(\"token\");\r\n//         setAuth(JSON.parse(token))\r\n//         console.log(JSON.parse(token))\r\n//         const getToken = async () => {\r\n//             debugger\r\n//             setAuth(JSON.parse(token))\r\n//            // if (token) {\r\n//            //     await setAuth(() => {\r\n//            //          console.log(token.data.accessToken);\r\n//            //          return {\r\n//            //              roles: token.data.roles,\r\n//            //              accessToken: token.data.accessToken\r\n//            //          }\r\n//            //      });\r\n//\r\n//                 // try {\r\n//                 //     debugger\r\n//                 //     // await setAuth(token)\r\n//                 //     await setAuth(() => {\r\n//                 //         console.log(token.data.accessToken);\r\n//                 //         return {\r\n//                 //             roles: token.data.roles,\r\n//                 //             accessToken: token.data.accessToken\r\n//                 //         }\r\n//                 //     });\r\n//                 // } catch (err) {\r\n//                 //     console.error(err);\r\n//                 // } finally {\r\n//                 console.log(token)\r\n//                     isMounted && setIsLoading(false);\r\n//                 // }\r\n//             // }\r\n//             !setAuth?.accessToken && persist ? await getToken() : setIsLoading(false);\r\n//             return () => isMounted = false;\r\n//         }\r\n//     }, [])\r\n//\r\n//     return (\r\n//         <>\r\n//             {!persist\r\n//                 ? <Outlet/>\r\n//                 : isLoading\r\n//                     ? <p>Loading...</p>\r\n//                     : <Outlet/>\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n// export default PersistLogin\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}