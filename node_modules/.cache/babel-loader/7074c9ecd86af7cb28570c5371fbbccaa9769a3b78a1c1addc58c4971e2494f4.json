{"ast":null,"code":"import axios from \"axios\";\nexport class BookApi {\n  constructor() {\n    this.baseUrl = \"https://localhost:7196\";\n  }\n  async getBooks() {\n    return await fetch(`${this.baseUrl}/api/book/getAll`);\n  }\n  async addBook(book) {\n    debugger;\n    const formData = new FormData(book);\n    // formData.append('AuthorId', book.authorId)\n    // formData.append('CategoriesIds', book.categoriesIds)\n    // formData.append('Name', book.name)\n    // formData.append('Description', book.description)\n    // formData.append('PhotoFile', book.photo)\n\n    return axios.post(`${this.baseUrl}/api/book/add`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      debugger;\n      console.log(res);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n\n    // return await axios({\n    //     method: \"post\",\n    //     url: `${this.baseUrl}/api/book/add`,\n    //     body: formData,\n    //     headers: {\"Content-Type\": \"multipart/form-data\"},\n    // }).then(\n    //     (result) => {\n    //         debugger\n    //         console.log(result);\n    //     })\n  }\n\n  async deleteBook(id) {\n    return await fetch(`${this.baseUrl}/api/book/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      console.log(\"deleted\");\n    });\n  }\n\n  // async getBooksByAuthorId(id) {\n  //     return await fetch(`${this.baseUrl}/api/book/author/${id}`, {\n  //         method: \"GET\",\n  //     }).then(() => {\n  //         console.log(id)\n  //     })\n  // }\n  async getBooksByAuthorId(id) {\n    return await fetch(`${this.baseUrl}/api/book/author/${id}`);\n  }\n}","map":{"version":3,"names":["axios","BookApi","baseUrl","getBooks","fetch","addBook","book","formData","FormData","post","headers","then","res","console","log","catch","err","deleteBook","id","method","getBooksByAuthorId"],"sources":["C:/Users/User/WebstormProjects/library/src/api/BookApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport class BookApi{\r\n\r\n    baseUrl = \"https://localhost:7196\"\r\n\r\n    async getBooks(){\r\n        return await fetch(`${this.baseUrl}/api/book/getAll`)\r\n    }\r\n    async addBook(book) {\r\n        debugger\r\n        const formData = new FormData(book);\r\n        // formData.append('AuthorId', book.authorId)\r\n        // formData.append('CategoriesIds', book.categoriesIds)\r\n        // formData.append('Name', book.name)\r\n        // formData.append('Description', book.description)\r\n        // formData.append('PhotoFile', book.photo)\r\n\r\n        return axios\r\n            .post(`${this.baseUrl}/api/book/add`, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            })\r\n            .then((res) => {\r\n                debugger\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                debugger\r\n                console.log(err);\r\n            });\r\n\r\n        // return await axios({\r\n        //     method: \"post\",\r\n        //     url: `${this.baseUrl}/api/book/add`,\r\n        //     body: formData,\r\n        //     headers: {\"Content-Type\": \"multipart/form-data\"},\r\n        // }).then(\r\n        //     (result) => {\r\n        //         debugger\r\n        //         console.log(result);\r\n        //     })\r\n    }\r\n\r\n    async deleteBook(id){\r\n        return await fetch(`${this.baseUrl}/api/book/delete/${id}`, {\r\n            method: \"DELETE\",\r\n            headers:{\"Accept\" : \"application/json\",\r\n                \"Content-Type\" : \"application/json\"},\r\n        }).then(() =>{\r\n            console.log(\"deleted\")\r\n        })}\r\n\r\n    // async getBooksByAuthorId(id) {\r\n    //     return await fetch(`${this.baseUrl}/api/book/author/${id}`, {\r\n    //         method: \"GET\",\r\n    //     }).then(() => {\r\n    //         console.log(id)\r\n    //     })\r\n    // }\r\n    async getBooksByAuthorId(id){\r\n        return await fetch(`${this.baseUrl}/api/book/author/${id}`)\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO;EAAA;IAAA,KAEhBC,OAAO,GAAG,wBAAwB;EAAA;EAElC,MAAMC,QAAQ,GAAE;IACZ,OAAO,MAAMC,KAAK,CAAE,GAAE,IAAI,CAACF,OAAQ,kBAAiB,CAAC;EACzD;EACA,MAAMG,OAAO,CAACC,IAAI,EAAE;IAChB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACF,IAAI,CAAC;IACnC;IACA;IACA;IACA;IACA;;IAEA,OAAON,KAAK,CACPS,IAAI,CAAE,GAAE,IAAI,CAACP,OAAQ,eAAc,EAAEK,QAAQ,EAAE;MAC5CG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACX;MACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACZ;MACAH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB,CAAC,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;;EAEA,MAAMC,UAAU,CAACC,EAAE,EAAC;IAChB,OAAO,MAAMd,KAAK,CAAE,GAAE,IAAI,CAACF,OAAQ,oBAAmBgB,EAAG,EAAC,EAAE;MACxDC,MAAM,EAAE,QAAQ;MAChBT,OAAO,EAAC;QAAC,QAAQ,EAAG,kBAAkB;QAClC,cAAc,EAAG;MAAkB;IAC3C,CAAC,CAAC,CAACC,IAAI,CAAC,MAAK;MACTE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC,CAAC;EAAA;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMM,kBAAkB,CAACF,EAAE,EAAC;IACxB,OAAO,MAAMd,KAAK,CAAE,GAAE,IAAI,CAACF,OAAQ,oBAAmBgB,EAAG,EAAC,CAAC;EAC/D;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}