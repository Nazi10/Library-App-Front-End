{"ast":null,"code":"var _s = $RefreshSig$();\nimport useAxiosPrivate from \"./useAxiosPrivate\";\nexport const BookApi = () => {\n  _s();\n  const protectedAxios = useAxiosPrivate();\n  const getBooks = async () => {\n    try {\n      const response = await protectedAxios.get('/api/book/getAll', {\n        signal: controller.signal\n      });\n      console.log(response.data);\n      isMounted && setUsers(response.data);\n    } catch (err) {\n      console.error(err);\n      navigate('/login', {\n        state: {\n          from: location\n        },\n        replace: true\n      });\n    }\n  };\n  // async addBookByAdmin(book) {\n  //     const formData = new FormData();\n  //     formData.append('AuthorId', book.authorId)\n  //     for (let i=0; i< book.categoriesIds.length; i++) {\n  //         formData.append('CategoriesIds', book.categoriesIds[i]);\n  //     }\n  //     formData.append('Name', book.name)\n  //     formData.append('Description', book.description)\n  //     formData.append('PhotoFile', book.photo)\n  //     return axios\n  //         .post(`/api/book/addByAdmin`, formData, {\n  //             headers: {\n  //                 \"Content-Type\": \"multipart/form-data\",\n  //             },\n  //         })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n  //\n  // async deleteBook(id){\n  //     return axios.delete(`/api/book/delete/${id}`, {\n  //         method: \"DELETE\",\n  //         headers:{\"Accept\" : \"application/json\",\n  //             \"Content-Type\" : \"application/json\"},\n  //     }).then(() =>{\n  //         console.log(\"deleted\")\n  //     })}\n  //\n  // async addBookByAuthor(book) {\n  //     const formData = new FormData();\n  //     formData.append('AuthorId', book.authorId)\n  //     for (let i=0; i< book.categoriesIds.length; i++) {\n  //         formData.append('CategoriesIds', book.categoriesIds[i]);\n  //     }\n  //     formData.append('Name', book.name)\n  //     formData.append('Description', book.description)\n  //     formData.append('PhotoFile', book.photo)\n  //     return axios\n  //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\n  //             headers: {\n  //                 \"Content-Type\": \"multipart/form-data\",\n  //             },\n  //         })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n  //\n  // async getBooksByAuthorId(id){\n  //     return axios.get(`/api/book/author/${id}`)\n  // }\n};\n_s(BookApi, \"u6qqAZCqmtYy1M36f1mICPZYkDs=\", false, function () {\n  return [useAxiosPrivate];\n});\n_c = BookApi;\nvar _c;\n$RefreshReg$(_c, \"BookApi\");","map":{"version":3,"names":["useAxiosPrivate","BookApi","protectedAxios","getBooks","response","get","signal","controller","console","log","data","isMounted","setUsers","err","error","navigate","state","from","location","replace"],"sources":["C:/Users/User/WebstormProjects/library/src/api/BookApi.js"],"sourcesContent":["\r\nimport useAxiosPrivate from \"./useAxiosPrivate\";\r\n\r\nexport const BookApi =() =>{\r\n    const protectedAxios = useAxiosPrivate();\r\n\r\n    const getBooks = async () =>{\r\n        try {\r\n            const response = await protectedAxios.get('/api/book/getAll', {\r\n                signal: controller.signal\r\n            });\r\n            console.log(response.data);\r\n            isMounted && setUsers(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            navigate('/login', { state: { from: location }, replace: true });\r\n        }\r\n    }\r\n    // async addBookByAdmin(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // async deleteBook(id){\r\n    //     return axios.delete(`/api/book/delete/${id}`, {\r\n    //         method: \"DELETE\",\r\n    //         headers:{\"Accept\" : \"application/json\",\r\n    //             \"Content-Type\" : \"application/json\"},\r\n    //     }).then(() =>{\r\n    //         console.log(\"deleted\")\r\n    //     })}\r\n    //\r\n    // async addBookByAuthor(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // async getBooksByAuthorId(id){\r\n    //     return axios.get(`/api/book/author/${id}`)\r\n    // }\r\n\r\n}\r\n"],"mappings":";AACA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,OAAO,MAAMC,OAAO,GAAE,MAAK;EAAA;EACvB,MAAMC,cAAc,GAAGF,eAAe,EAAE;EAExC,MAAMG,QAAQ,GAAG,YAAW;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAG,CAAC,kBAAkB,EAAE;QAC1DC,MAAM,EAAEC,UAAU,CAACD;MACvB,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;MAC1BC,SAAS,IAAIC,QAAQ,CAACR,QAAQ,CAACM,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVL,OAAO,CAACM,KAAK,CAACD,GAAG,CAAC;MAClBE,QAAQ,CAAC,QAAQ,EAAE;QAAEC,KAAK,EAAE;UAAEC,IAAI,EAAEC;QAAS,CAAC;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACpE;EACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ,CAAC;AAAA,GA1EYlB,OAAO;EAAA,QACOD,eAAe;AAAA;AAAA,KAD7BC,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}