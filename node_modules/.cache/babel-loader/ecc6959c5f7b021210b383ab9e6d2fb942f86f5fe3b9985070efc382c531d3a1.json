{"ast":null,"code":"var _s = $RefreshSig$();\nimport useAxiosPrivate from \"./useAxiosPrivate\";\nexport function BookApi() {\n  _s();\n  const axiosPrivate1 = useAxiosPrivate();\n  const baseUrl = \"https://localhost:7196\";\n  const getBooks = async () => {\n    return await axiosPrivate1.get(`/api/book/getAll`);\n  };\n  // async addBookByAdmin(book) {\n  //     const formData = new FormData();\n  //     formData.append('AuthorId', book.authorId)\n  //     for (let i=0; i< book.categoriesIds.length; i++) {\n  //         formData.append('CategoriesIds', book.categoriesIds[i]);\n  //     }\n  //     formData.append('Name', book.name)\n  //     formData.append('Description', book.description)\n  //     formData.append('PhotoFile', book.photo)\n  //     return axios\n  //         .post(`/api/book/addByAdmin`, formData, {\n  //             headers: {\n  //                 \"Content-Type\": \"multipart/form-data\",\n  //             },\n  //         })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n  //\n  // async deleteBook(id){\n  //     return axios.delete(`/api/book/delete/${id}`, {\n  //         method: \"DELETE\",\n  //         headers:{\"Accept\" : \"application/json\",\n  //             \"Content-Type\" : \"application/json\"},\n  //     }).then(() =>{\n  //         console.log(\"deleted\")\n  //     })}\n  //\n  // async addBookByAuthor(book) {\n  //     const formData = new FormData();\n  //     formData.append('AuthorId', book.authorId)\n  //     for (let i=0; i< book.categoriesIds.length; i++) {\n  //         formData.append('CategoriesIds', book.categoriesIds[i]);\n  //     }\n  //     formData.append('Name', book.name)\n  //     formData.append('Description', book.description)\n  //     formData.append('PhotoFile', book.photo)\n  //     return axios\n  //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\n  //             headers: {\n  //                 \"Content-Type\": \"multipart/form-data\",\n  //             },\n  //         })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n  //\n  // async getBooksByAuthorId(id){\n  //     return axios.get(`/api/book/author/${id}`)\n  // }\n}\n_s(BookApi, \"JfotJx5hqLrxQ5PQTk18OhaesPo=\", false, function () {\n  return [useAxiosPrivate];\n});\n_c = BookApi;\nvar _c;\n$RefreshReg$(_c, \"BookApi\");","map":{"version":3,"names":["useAxiosPrivate","BookApi","axiosPrivate1","baseUrl","getBooks","get"],"sources":["C:/Users/User/WebstormProjects/library/src/api/BookApi.js"],"sourcesContent":["\r\nimport useAxiosPrivate from \"./useAxiosPrivate\";\r\n\r\nexport function BookApi (){\r\n    const axiosPrivate1 = useAxiosPrivate();\r\n    const baseUrl = \"https://localhost:7196\"\r\n\r\n    const getBooks = async () =>{\r\n        return await axiosPrivate1.get(`/api/book/getAll`)\r\n    }\r\n    // async addBookByAdmin(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // async deleteBook(id){\r\n    //     return axios.delete(`/api/book/delete/${id}`, {\r\n    //         method: \"DELETE\",\r\n    //         headers:{\"Accept\" : \"application/json\",\r\n    //             \"Content-Type\" : \"application/json\"},\r\n    //     }).then(() =>{\r\n    //         console.log(\"deleted\")\r\n    //     })}\r\n    //\r\n    // async addBookByAuthor(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // async getBooksByAuthorId(id){\r\n    //     return axios.get(`/api/book/author/${id}`)\r\n    // }\r\n\r\n}\r\n"],"mappings":";AACA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,OAAO,SAASC,OAAO,GAAG;EAAA;EACtB,MAAMC,aAAa,GAAGF,eAAe,EAAE;EACvC,MAAMG,OAAO,GAAG,wBAAwB;EAExC,MAAMC,QAAQ,GAAG,YAAW;IACxB,OAAO,MAAMF,aAAa,CAACG,GAAG,CAAE,kBAAiB,CAAC;EACtD,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ;AAAC,GAlEeJ,OAAO;EAAA,QACGD,eAAe;AAAA;AAAA,KADzBC,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}