{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\library\\\\src\\\\components\\\\authentication\\\\PersistLogin.js\",\n  _s = $RefreshSig$();\nimport { Outlet } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport useAuth from './AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PersistLogin = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    auth,\n    persist\n  } = useContext(useAuth);\n  useEffect(() => {\n    let isMounted = true;\n    const setToken = async () => {\n      try {\n        localStorage.getItem(\"token\");\n      } catch (err) {\n        console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n    !(auth !== null && auth !== void 0 && auth.accessToken) && persist ? setToken() : setIsLoading(false);\n    return () => isMounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !persist ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n};\n_s(PersistLogin, \"5z+9eoQiMroe1bGl76Mq8+c3Ymo=\");\n_c = PersistLogin;\nexport default PersistLogin;\nvar _c;\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"names":["Outlet","useState","useEffect","useContext","useAuth","PersistLogin","isLoading","setIsLoading","auth","persist","isMounted","setToken","localStorage","getItem","err","console","error","accessToken"],"sources":["C:/Users/User/WebstormProjects/library/src/components/authentication/PersistLogin.js"],"sourcesContent":["import { Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport useAuth from './AuthProvider';\r\n\r\nconst PersistLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { auth, persist } = useContext(useAuth);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const setToken = async () => {\r\n            try {\r\n                localStorage.getItem(\"token\");\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n            finally {\r\n                isMounted && setIsLoading(false);\r\n            }\r\n        }\r\n        !auth?.accessToken && persist ? setToken() : setIsLoading(false);\r\n        return () => isMounted = false;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {!persist\r\n                ? <Outlet />\r\n                : isLoading\r\n                    ? <p>Loading...</p>\r\n                    : <Outlet />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersistLogin\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,OAAO,MAAM,gBAAgB;AAAC;AAAA;AAErC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO,IAAI;IAAEC;EAAQ,CAAC,GAAGN,UAAU,CAACC,OAAO,CAAC;EAE7CF,SAAS,CAAC,MAAM;IACZ,IAAIQ,SAAS,GAAG,IAAI;IACpB,MAAMC,QAAQ,GAAG,YAAY;MACzB,IAAI;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjC,CAAC,CACD,OAAOC,GAAG,EAAE;QACRC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACtB,CAAC,SACO;QACJJ,SAAS,IAAIH,YAAY,CAAC,KAAK,CAAC;MACpC;IACJ,CAAC;IACD,EAACC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAES,WAAW,KAAIR,OAAO,GAAGE,QAAQ,EAAE,GAAGJ,YAAY,CAAC,KAAK,CAAC;IAChE,OAAO,MAAMG,SAAS,GAAG,KAAK;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACK,CAACD,OAAO,gBACH,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,GACVH,SAAS,gBACL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,gBACjB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAG,iBAErB;AAEX,CAAC;AAAA,GA/BKD,YAAY;AAAA,KAAZA,YAAY;AAiClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}