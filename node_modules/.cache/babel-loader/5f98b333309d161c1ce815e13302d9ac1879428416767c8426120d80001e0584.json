{"ast":null,"code":"import useAxiosPrivate from \"./useAxiosPrivate\";\nconst controller = new AbortController();\nlet protectedAxios = useAxiosPrivate();\nexport function getBooks() {\n  protectedAxios.get('/api/book/getAll', {\n    signal: controller.signal\n  });\n}\n\n// function addBookByAdmin(book) {\n//     const formData = new FormData();\n//     formData.append('AuthorId', book.authorId)\n//     for (let i=0; i< book.categoriesIds.length; i++) {\n//         formData.append('CategoriesIds', book.categoriesIds[i]);\n//     }\n//     formData.append('Name', book.name)\n//     formData.append('Description', book.description)\n//     formData.append('PhotoFile', book.photo)\n//     return axios\n//         .post(`/api/book/addByAdmin`, formData, {\n//             headers: {\n//                 \"Content-Type\": \"multipart/form-data\",\n//             },\n//         })\n//         .then((res) => {\n//             return res;\n//         })\n//         .catch((err) => {\n//             console.log(err);\n//         });\n// }\n//\n// function deleteBook(id){\n//     return this.protectedAxios.delete(`/api/book/delete/${id}`, {\n//         method: \"DELETE\",\n//         headers:{\"Accept\" : \"application/json\",\n//             \"Content-Type\" : \"application/json\"},\n//     }).then(() =>{\n//         console.log(\"deleted\")\n//     })}\n//\n// function addBookByAuthor(book) {\n//     const formData = new FormData();\n//     formData.append('AuthorId', book.authorId)\n//     for (let i=0; i< book.categoriesIds.length; i++) {\n//         formData.append('CategoriesIds', book.categoriesIds[i]);\n//     }\n//     formData.append('Name', book.name)\n//     formData.append('Description', book.description)\n//     formData.append('PhotoFile', book.photo)\n//     return axios\n//         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\n//             headers: {\n//                 \"Content-Type\": \"multipart/form-data\",\n//             },\n//         })\n//         .then((res) => {\n//             return res;\n//         })\n//         .catch((err) => {\n//             console.log(err);\n//         });\n// }\n//\n// function getBooksByAuthorId(id){\n//     return axios.get(`/api/book/author/${id}`)\n// }","map":{"version":3,"names":["useAxiosPrivate","controller","AbortController","protectedAxios","getBooks","get","signal"],"sources":["C:/Users/User/WebstormProjects/library/src/api/BookApi.js"],"sourcesContent":["import useAxiosPrivate from \"./useAxiosPrivate\";\r\n\r\nconst controller = new AbortController();\r\nlet protectedAxios = useAxiosPrivate();\r\nexport function getBooks(){\r\n\r\n    protectedAxios.get('/api/book/getAll', {\r\n        signal: controller.signal\r\n    });\r\n}\r\n\r\n    // function addBookByAdmin(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // function deleteBook(id){\r\n    //     return this.protectedAxios.delete(`/api/book/delete/${id}`, {\r\n    //         method: \"DELETE\",\r\n    //         headers:{\"Accept\" : \"application/json\",\r\n    //             \"Content-Type\" : \"application/json\"},\r\n    //     }).then(() =>{\r\n    //         console.log(\"deleted\")\r\n    //     })}\r\n    //\r\n    // function addBookByAuthor(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // function getBooksByAuthorId(id){\r\n    //     return axios.get(`/api/book/author/${id}`)\r\n    // }\r\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,MAAMC,UAAU,GAAG,IAAIC,eAAe,EAAE;AACxC,IAAIC,cAAc,GAAGH,eAAe,EAAE;AACtC,OAAO,SAASI,QAAQ,GAAE;EAEtBD,cAAc,CAACE,GAAG,CAAC,kBAAkB,EAAE;IACnCC,MAAM,EAAEL,UAAU,CAACK;EACvB,CAAC,CAAC;AACN;;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}