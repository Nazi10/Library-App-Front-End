{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\library\\\\src\\\\components\\\\authentication\\\\PersistLogin.js\",\n  _s = $RefreshSig$();\nimport { Outlet } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"./AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PersistLogin = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  let {\n    auth,\n    setAuth,\n    persist\n  } = useContext(AuthContext);\n  useEffect(() => {\n    let isMounted = true;\n    const localStorageData = localStorage.getItem(\"token\");\n    debugger;\n    const token = JSON.parse(localStorageData);\n    persist = true;\n    const getToken = async () => {\n      try {\n        debugger;\n        await setAuth(() => {\n          debugger;\n          return {\n            roles: token.role,\n            accessToken: token.token,\n            id: token.id\n          };\n        });\n      } catch (err) {\n        console.error(err);\n      } finally {\n        console.log(token);\n        isMounted && setIsLoading(false);\n      }\n    };\n    !(auth !== null && auth !== void 0 && auth.accessToken) && persist ? getToken() : setIsLoading(false);\n    return () => isMounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !persist ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n};\n_s(PersistLogin, \"1gzpzFyUjshhuN2HJYtetJiO7Kc=\");\n_c = PersistLogin;\nexport default PersistLogin;\nvar _c;\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"names":["Outlet","useState","useEffect","useContext","AuthContext","PersistLogin","isLoading","setIsLoading","auth","setAuth","persist","isMounted","localStorageData","localStorage","getItem","token","JSON","parse","getToken","roles","role","accessToken","id","err","console","error","log"],"sources":["C:/Users/User/WebstormProjects/library/src/components/authentication/PersistLogin.js"],"sourcesContent":["import {Outlet} from \"react-router-dom\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport AuthContext from \"./AuthProvider\";\r\n\r\nconst PersistLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    let {auth, setAuth, persist} = useContext(AuthContext);\r\n\r\n    useEffect( () => {\r\n        let isMounted = true;\r\n        const localStorageData = localStorage.getItem(\"token\");\r\n        debugger\r\n        const token = JSON.parse(localStorageData)\r\n        persist = true;\r\n        const getToken = async () => {\r\n            try {\r\n                debugger\r\n                await setAuth(() => {\r\n                    debugger\r\n                    return {\r\n                        roles: token.role,\r\n                        accessToken: token.token,\r\n                        id: token.id\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                console.error(err);\r\n            } finally {\r\n                console.log(token)\r\n                isMounted && setIsLoading(false);\r\n            }\r\n        }\r\n        !auth?.accessToken && persist ? getToken() : setIsLoading(false);\r\n        return () => isMounted = false;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {!persist\r\n                ? <Outlet/>\r\n                : isLoading\r\n                    ? <p>Loading...</p>\r\n                    : <Outlet/>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default PersistLogin\r\n"],"mappings":";;AAAA,SAAQA,MAAM,QAAO,kBAAkB;AACvC,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AACrD,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAAA;AAEzC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI;IAACO,IAAI;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAEtDF,SAAS,CAAE,MAAM;IACb,IAAIS,SAAS,GAAG,IAAI;IACpB,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACtD;IACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;IAC1CF,OAAO,GAAG,IAAI;IACd,MAAMQ,QAAQ,GAAG,YAAY;MACzB,IAAI;QACA;QACA,MAAMT,OAAO,CAAC,MAAM;UAChB;UACA,OAAO;YACHU,KAAK,EAAEJ,KAAK,CAACK,IAAI;YACjBC,WAAW,EAAEN,KAAK,CAACA,KAAK;YACxBO,EAAE,EAAEP,KAAK,CAACO;UACd,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACtB,CAAC,SAAS;QACNC,OAAO,CAACE,GAAG,CAACX,KAAK,CAAC;QAClBJ,SAAS,IAAIJ,YAAY,CAAC,KAAK,CAAC;MACpC;IACJ,CAAC;IACD,EAACC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEa,WAAW,KAAIX,OAAO,GAAGQ,QAAQ,EAAE,GAAGX,YAAY,CAAC,KAAK,CAAC;IAChE,OAAO,MAAMI,SAAS,GAAG,KAAK;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACK,CAACD,OAAO,gBACH,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,GACTJ,SAAS,gBACL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,gBACjB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAE,iBAEpB;AAEX,CAAC;AAAA,GA1CKD,YAAY;AAAA,KAAZA,YAAY;AA2ClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}