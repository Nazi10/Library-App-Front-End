{"ast":null,"code":"import { Component, useState } from \"react\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\nimport { AuthorApi } from \"../../api/AuthorApi\";\nexport class AddAuthor extends Component {\n  // [show, setShow] = useState(false);\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  // const [newAuthor, setAuthor] = useState();\n  constructor(props) {\n    super(props);\n    this.handleSubmit = event => {\n      let authorService = new AuthorApi();\n      event.preventDefault();\n      fetch(`${this.baseUrl}/api/author/add` + 'author', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: null,\n          name: event.target.name.value,\n          bio: event.target.bio.value\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n      }, error => {\n        alert('Failed');\n      });\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  render() {}\n}","map":{"version":3,"names":["Component","useState","Button","Col","Form","Modal","Row","AuthorApi","AddAuthor","constructor","props","handleSubmit","event","authorService","preventDefault","fetch","baseUrl","method","headers","body","JSON","stringify","id","name","target","value","bio","then","res","json","result","alert","error","bind","render"],"sources":["C:/Users/User/WebstormProjects/library/src/components/author/AddAuthor.js"],"sourcesContent":["import {Component, useState} from \"react\";\r\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {AuthorApi} from \"../../api/AuthorApi\";\r\n\r\nexport class AddAuthor extends Component {\r\n    // [show, setShow] = useState(false);\r\n    // const handleClose = () => setShow(false);\r\n    // const handleShow = () => setShow(true);\r\n    // const [newAuthor, setAuthor] = useState();\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        let authorService = new AuthorApi()\r\n        event.preventDefault();\r\n        fetch(`${this.baseUrl}/api/author/add`+ 'author', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: null,\r\n                name: event.target.name.value,\r\n                bio: event.target.bio.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                    alert(result);\r\n                },\r\n                (error) => {\r\n                    alert('Failed');\r\n                })\r\n    }\r\n\r\n    render() {\r\n        \r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,QAAO,iBAAiB;AAC7D,SAAQC,SAAS,QAAO,qBAAqB;AAE7C,OAAO,MAAMC,SAAS,SAASR,SAAS,CAAC;EACrC;EACA;EACA;EACA;EACAS,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAIjBC,YAAY,GAAGC,KAAK,IAAI;MACpB,IAAIC,aAAa,GAAG,IAAIN,SAAS,EAAE;MACnCK,KAAK,CAACE,cAAc,EAAE;MACtBC,KAAK,CAAE,GAAE,IAAI,CAACC,OAAQ,iBAAgB,GAAE,QAAQ,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,EAAE,EAAE,IAAI;UACRC,IAAI,EAAEX,KAAK,CAACY,MAAM,CAACD,IAAI,CAACE,KAAK;UAC7BC,GAAG,EAAEd,KAAK,CAACY,MAAM,CAACE,GAAG,CAACD;QAC1B,CAAC;MACL,CAAC,CAAC,CACGE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,MAAM,IAAK;QACVC,KAAK,CAACD,MAAM,CAAC;MACjB,CAAC,EACAE,KAAK,IAAK;QACPD,KAAK,CAAC,QAAQ,CAAC;MACnB,CAAC,CAAC;IACd,CAAC;IAzBG,IAAI,CAACpB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACsB,IAAI,CAAC,IAAI,CAAC;EACpD;EA0BAC,MAAM,GAAG,CAET;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}