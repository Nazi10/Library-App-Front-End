{"ast":null,"code":"// export class BookApi {\n//\n//     protectedAxios = useAxiosPrivate();\n//     controller = new AbortController();\n//\n//     async getBooks(){\n//         this.protectedAxios.get('/api/book/getAll', {\n//             signal: this.controller.signal\n//         });\n//     }\nfunction addBookByAdmin(book) {\n  const formData = new FormData();\n  formData.append('AuthorId', book.authorId);\n  for (let i = 0; i < book.categoriesIds.length; i++) {\n    formData.append('CategoriesIds', book.categoriesIds[i]);\n  }\n  formData.append('Name', book.name);\n  formData.append('Description', book.description);\n  formData.append('PhotoFile', book.photo);\n  return axios.post(`/api/book/addByAdmin`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n//\n// function deleteBook(id){\n//     return this.protectedAxios.delete(`/api/book/delete/${id}`, {\n//         method: \"DELETE\",\n//         headers:{\"Accept\" : \"application/json\",\n//             \"Content-Type\" : \"application/json\"},\n//     }).then(() =>{\n//         console.log(\"deleted\")\n//     })}\n//\n// function addBookByAuthor(book) {\n//     const formData = new FormData();\n//     formData.append('AuthorId', book.authorId)\n//     for (let i=0; i< book.categoriesIds.length; i++) {\n//         formData.append('CategoriesIds', book.categoriesIds[i]);\n//     }\n//     formData.append('Name', book.name)\n//     formData.append('Description', book.description)\n//     formData.append('PhotoFile', book.photo)\n//     return axios\n//         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\n//             headers: {\n//                 \"Content-Type\": \"multipart/form-data\",\n//             },\n//         })\n//         .then((res) => {\n//             return res;\n//         })\n//         .catch((err) => {\n//             console.log(err);\n//         });\n// }\n//\n// fu getBooksByAuthorId(id){\n//     return axios.get(`/api/book/author/${id}`)\n// }\n\n// }","map":{"version":3,"names":["addBookByAdmin","book","formData","FormData","append","authorId","i","categoriesIds","length","name","description","photo","axios","post","headers","then","res","catch","err","console","log"],"sources":["C:/Users/User/WebstormProjects/library/src/api/BookApi.js"],"sourcesContent":["\r\n\r\n// export class BookApi {\r\n//\r\n//     protectedAxios = useAxiosPrivate();\r\n//     controller = new AbortController();\r\n//\r\n//     async getBooks(){\r\n//         this.protectedAxios.get('/api/book/getAll', {\r\n//             signal: this.controller.signal\r\n//         });\r\n//     }\r\n    function addBookByAdmin(book) {\r\n        const formData = new FormData();\r\n        formData.append('AuthorId', book.authorId)\r\n        for (let i=0; i< book.categoriesIds.length; i++) {\r\n            formData.append('CategoriesIds', book.categoriesIds[i]);\r\n        }\r\n        formData.append('Name', book.name)\r\n        formData.append('Description', book.description)\r\n        formData.append('PhotoFile', book.photo)\r\n        return axios\r\n            .post(`/api/book/addByAdmin`, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    //\r\n    // function deleteBook(id){\r\n    //     return this.protectedAxios.delete(`/api/book/delete/${id}`, {\r\n    //         method: \"DELETE\",\r\n    //         headers:{\"Accept\" : \"application/json\",\r\n    //             \"Content-Type\" : \"application/json\"},\r\n    //     }).then(() =>{\r\n    //         console.log(\"deleted\")\r\n    //     })}\r\n    //\r\n    // function addBookByAuthor(book) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('AuthorId', book.authorId)\r\n    //     for (let i=0; i< book.categoriesIds.length; i++) {\r\n    //         formData.append('CategoriesIds', book.categoriesIds[i]);\r\n    //     }\r\n    //     formData.append('Name', book.name)\r\n    //     formData.append('Description', book.description)\r\n    //     formData.append('PhotoFile', book.photo)\r\n    //     return axios\r\n    //         .post(`${this.baseUrl}/api/book/addByAdmin`, formData, {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }\r\n    //\r\n    // fu getBooksByAuthorId(id){\r\n    //     return axios.get(`/api/book/author/${id}`)\r\n    // }\r\n\r\n// }\r\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,SAASA,cAAc,CAACC,IAAI,EAAE;EAC1B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,IAAI,CAACI,QAAQ,CAAC;EAC1C,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEL,IAAI,CAACM,aAAa,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC7CJ,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEH,IAAI,CAACM,aAAa,CAACD,CAAC,CAAC,CAAC;EAC3D;EACAJ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAACQ,IAAI,CAAC;EAClCP,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,IAAI,CAACS,WAAW,CAAC;EAChDR,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,IAAI,CAACU,KAAK,CAAC;EACxC,OAAOC,KAAK,CACPC,IAAI,CAAE,sBAAqB,EAAEX,QAAQ,EAAE;IACpCY,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG;EACd,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}